LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.numeric_std.ALL;

ENTITY reset_logic IS
	PORT (
		-- Input ports
		CLK : IN STD_LOGIC;
		reset_in : IN STD_LOGIC;
		hrs_bin1 : IN STD_LOGIC_VECTOR;
		hrs_bin10 : IN STD_LOGIC_VECTOR;

		-- Output ports
		reset_out : OUT STD_LOGIC;
	);
END reset_logic;

ARCHITECTURE reset_logic_impl OF reset_logic IS

	--SIGNAL cout2clken0 : STD_LOGIC := 0;

BEGIN

	< optional_label > :
	PROCESS (reset, clk) IS
		-- Declaration(s) 
	BEGIN
		IF (reset = '0') THEN
			-- Asynchronous Sequential Statement(s) 
		ELSIF (rising_edge(clk)) THEN
			IF hrs_bin1 = '4' AND hrs_bin10 = '2' THEN
				reset_out <= '1';
			ELSIF reset_in == 1 THEN
				reset_out <= '1';
			ELSE
				reset_out <= '0';
			END IF;

		END IF;
	END PROCESS;
	-- Process Statement (optional)

	-- Concurrent Procedure Call (optional)

	-- Concurrent Signal Assignment (optional)

	-- Conditional Signal Assignment (optional)

	-- Selected Signal Assignment (optional)

	-- Component Instantiation Statement (optional)

	-- Generate Statement (optional)

END reset_logic_impl;